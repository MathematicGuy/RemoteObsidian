{
	"nodes":[
		{"id":"077f079fd97a8c26","type":"file","file":"CV_Final_results.md","x":-80,"y":-260,"width":400,"height":400},
		{"id":"ef2589e54cb73e1d","type":"file","file":"image/Pasted image 20250404083553.png","x":-1160,"y":-1120,"width":333,"height":400},
		{"id":"9a9d9fa6b2d0f556","type":"file","file":"image/Pasted image 20250404083606.png","x":-1160,"y":-1480,"width":318,"height":280},
		{"id":"340ad4beeba24182","type":"file","file":"image/Pasted image 20250404083655.png","x":-790,"y":-1120,"width":644,"height":400},
		{"id":"199d14d490c75a4d","type":"file","file":"Student Behavior Recognition System Planning.md","x":-2560,"y":-1120,"width":400,"height":400},
		{"id":"b27bc4735e851c12","type":"file","file":"Example Prompts.md","x":-790,"y":-260,"width":644,"height":820},
		{"id":"4fc5a4e8d978161c","type":"file","file":"image/Behavior Detection System Design 1.jpg","x":-790,"y":-680,"width":644,"height":354},
		{"id":"1b68c3124a90cbcd","type":"text","text":"# Overall Prompt\n\nHello! I’m a second-year computer science student working on \"Violent Behavior Detection in the School Environment.\" The project has three phases: (1) Skeleton Data Collection and Preprocessing, (2) Feature Extraction, and (3) Behavior Classification. My goals are >15 FPS and 75-80% accuracy using the HBD21 dataset—videos of labeled violent and non-violent behaviors in schools. I’m using MediaPipe for skeleton extraction (it’s Colab-friendly), YOLOv11 for person detection, and TensorFlow for the DNN, all on Google Colab Pro with an T4 GPU.\n \nI’ll use 10 prompts to guide me:\n\n1. Understand the project overview and goals.\n2. Set up tools and the HBD21 dataset in Colab.\n3. Extract and optimize skeleton data with MediaPipe.\n4. Train YOLOv11 for person detection.\n5. Build an error correction scheme.\n6. Extract features from skeleton data.\n7. Design and train the DNN with TensorFlow.\n8. Test and evaluate the system’s performance.\n9. Integrate all components and explore deployment.\n10. Address challenges and finalize the timeline.\n\nEach prompt builds on the previous one, so please connect ideas across steps. For each, I need step-by-step code with comments and explanations I can follow as a beginner. Point out potential flaws and suggest improvements. If anything’s unclear, ask me for clarification.\n\nI have a demo due February 20, 2025, and a final deadline of June 30, 2025—keep this in mind. I’m open to alternative ideas to enhance the project.\n\nLet’s start with Prompt 1: \"Help me understand my project overview and goals in detail.\"","x":-1400,"y":-260,"width":570,"height":820},
		{"id":"44fb263a3b850c32","type":"text","text":"# Main Pipeline\n\n## Collect Skeleton and Bounding Box\nMediapipe -> Skeleton Data inside the Bounding Box\nYolov11 -> Bounding Box \n\n## Retrieve & Analyze each coordinate\n+ $ Understand DNN input shape. \n\n## Apply Skeleton Correction  Algorithms\n+ $ Learn How to Correct Skeleton Data First.\n\n## Pre-Processed Skeleton Data \n+ $ **Goals:** Extract 3 type of datas, each one is a vector. \"**Normalize Skeleton Data**, **Angle Between Joints**, \"**Distance Between Joints**\". \n\n**Normalize Skeleton Data**\n\n**Distance Between Joints**\n\n**Angle Between Joints**\n\n","x":-2120,"y":-1120,"width":400,"height":400},
		{"id":"50a81844e35568e9","type":"file","file":"Example Code.md","x":-3000,"y":-1120,"width":400,"height":400},
		{"id":"f89a78fe8397e87d","type":"text","text":"### Testing Pipeline\n+ @ The mindset is to use **Mediapipe to detect violent action (class) of a single person then scale up to multiple-person by using yolov11** to detect violent action class within the bounding box. \nNote: the .csv file should have \"video_id, violent (boolean), violen action\" fields.\n+ ? **Extract Frame of Violent Actor who perform a Specific Violent Action** ( [Detecting Suspicious Activities with YOLO11 Pose Estimation]https://www.youtube.com/watch?v=PfZi5sv6058) \n+ $  Then extract skeleton data of each action \n\n**Trained Models:**  \n+ **Machine Learning:** Linear Regression, Ridge Classifier, RandomForestRegressor, GradientBoostingClassifier\n\t\n+ **Deep Learning:** DNN, CNN, LSTM. \n\n#### Split Image into Frames. \n#### Perform Detection (Pose, Bounding Box) \n#### Validations","x":-80,"y":-680,"width":520,"height":354},
		{"id":"bf6ed3f67c0c9e1b","type":"file","file":"OpenPose vs MediaPipe vs Yolo-Pose - How They Work and Key Differences.md","x":-1920,"y":-260,"width":480,"height":820}
	],
	"edges":[]
}